#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\rightmargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\size giant
CS237 - C and UNIX - Assignment 1
\end_layout

\begin_layout Author

\size larger
Samuel Jackson - slj11@aber.ac.uk
\end_layout

\begin_layout Section
Justification of Design
\end_layout

\begin_layout Standard
In this section of the document I provide a detailed justification of the
 design choices I have made as part of my solution to this assignment.
 This includes a discussion of the data structures and functions that I
 have implemented as well as the logical layout of my application.
\end_layout

\begin_layout Subsection
Data Structures
\begin_inset CommandInset label
LatexCommand label
name "sub:Data-Structures"

\end_inset


\end_layout

\begin_layout Standard
This assignment required a large set of pre-generated data, given in the
 form of individual files, to be read into and interpreted by the application.
 One of the first decisions that I made when planning the design of my applicati
on was to create a collection of separate C structures to store the data
 read in from each of these files in a meaningful way.
 Therefore, in my application I have one data structure for each of the
 types of file that were outlined in the brief.
 
\end_layout

\begin_layout Standard
When initially writing the structures, they only stored the information
 that was exactly specified in the brief.
 For example, initially the only fields in the event structure were the
 name, date and time fields.
 Other fields that are pointers to other structures or hold application
 generated data were added later as I designed the rest of the application
 logic.
\end_layout

\begin_layout Standard
Having a structure for each discrete instance of information in my program
 allowed me to keep data pooled together into logical 
\begin_inset Quotes eld
\end_inset

chunks
\begin_inset Quotes erd
\end_inset

 which I could pass from one function to another depending on what data
 that function requires.
 In order to keep the memory requirements of my application to an minimum
 while still allowing them to be modified, I have tried to pass the structures
 the application uses to functions mostly by reference using pointers so
 that all the data in the structure need not be copied to local variables
 needlessly.
 This is particularly relevant with the larger data structures in my application
 such as the event and entrant structures.
 
\end_layout

\begin_layout Standard
Also, grouping data into logical chunks keeps the number of parameters being
 passed to each function smaller and therefore reduces code complexity and
 increases code readability.
 This also helps with the maintainability of the program as modifying a
 field or adding another variable to a structure does not require changing
 (potentially many) function declarations to access it later in the program
 execution.
\end_layout

\begin_layout Standard
Alongside each of these major data structures, there are also a couple of
 smaller structures which help to break the larger structures down further
 into even more logical chunks (such as each entrant having a 
\begin_inset Quotes eld
\end_inset

state
\begin_inset Quotes erd
\end_inset

 which contains data about an entrants current position and status).
 There are also a set of different C enumerations which support each of
 the major structures where they require a value which is non primitive
 (such as the state of an entrant or the type of a checkpoint) as these
 are more readily processed in C than the alternative of storing them as
 a character array, more readable than using a simple integer value for
 a state/type and more compact than using a set of define macros.
\end_layout

\begin_layout Standard
Due to their wide use across the application, I decided to separate the
 definition of these structures into a single header file that could be
 included by each of the c files in the program.
 Within this file, the structure definitions as wrapped in a #ifndef macro
 to ensure that they are only included once per file by the compiler.
\end_layout

\begin_layout Standard
While almost all data structures used by the application are stored in the
 structures header file, a couple of structures are defined separately.
 In my application, I have defined a separate 
\begin_inset Quotes eld
\end_inset

generic
\begin_inset Quotes erd
\end_inset

 linked list and list node structure (and accompanying methods prototypes)
 in a separate header file.
 
\end_layout

\begin_layout Standard
The linked list structure simply has pointers to the head and tail list
 nodes in the linked list.
 Each list node has a pointer to the next node in the list as well as a
 void pointer (so that it can store data of any type) to the data contained
 at this node.
 These structures are defined seperate from the other structures as they
 are not necessarily specific to this application and could be reused in
 future projects.
 One final note is that I have included a pointer to the tail of the linked
 list so that insertions to the end can be made in 
\begin_inset Formula $O(1)$
\end_inset

 rather than 
\begin_inset Formula $O(n)$
\end_inset

 time.
\end_layout

\begin_layout Standard
Each instance of a data item read in from a file (e.g.
 a track or a node) are stored in linked lists.
 This is because the brief does not specify in advance how many entrants,
 tracks, courses etc.
 so we need to have a data structure that can be dynamically sized.
 The alternative would be to count the number of lines in the file first
 and then allocate an array of the appropriate size.
 You could also reallocate more memory to and existing array, but both of
 these options have a higher time complexity than simply using a linked
 list with tail insertion.
\end_layout

\begin_layout Standard
A final note is that, where possible, I have also defined macros rather
 than using literal numbers across the system.
 This makes it easier to modify the code at a later date should a requirement
 change.
 For example, at the moment a file path is expected to be no long than 100
 characters, but in the future this can easily be changed if required by
 only altering the macro definition of the size in order to change it across
 the program.
\end_layout

\begin_layout Subsection
Main Mission
\end_layout

\begin_layout Standard
The majority of the code that was written for this assignment was developed
 when I was planning and writing the main mission with only a few changes
 being made between the main and extended versions.
 This section therefore provides a discussion of the design which applies
 to both parts.
\end_layout

\begin_layout Standard
I have split my program up into five major parts.
 The first key part of the program design was the structures file which
 has already been discussed in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Data-Structures"

\end_inset

.
 The other parts to the system include the main, fileio, util and linked_list
 files along with their accompanying headers.
\end_layout

\begin_layout Standard
The main file contains the entry point into the application and contains
 the majority of the high level functions that satisfy the key requirements
 of the system as outlined in section 6.1 of the brief (excluding file reading
 operations).
 This includes functions to print a table of entrants, update the system
 with new times and query the competitors.
 I decided to keep all of these functions in the same file as this gives
 the program a top down design format where the most important functions
 of the system are first defined and then broken into smaller parts which
 as solved by other functions.
\end_layout

\begin_layout Standard
This brings me to the discussion of the util file.
 This file is where I kept functions which are less 
\begin_inset Quotes eld
\end_inset

high level
\begin_inset Quotes erd
\end_inset

 than the functions contained in the main file.
 The functions in this file are concerned with smaller, more general tasks,
 such as converting a string time to minutes or converting enumerations
 to human readable strings.
 It also contains functions for traversing linked lists of a specific type
 which are used in both the main file and the fileio file and therefore
 benefit from being in a seperate file that can be included in both files.
\end_layout

\begin_layout Standard
One part of my application that I feel could be developed further are the
 functions for finding a track/node/course etc.
 These functions are all very similar in that they iterate over a linked
 list to find a specific item and return it.
 Initially I wanted a single generic function that would be able to find
 an item in a linked list according using a pointer to a comparison function.
 However, this became difficult to implement as each of the comparison functions
 I would of had to write take a different parameters depending on the type
 of the data.
\end_layout

\begin_layout Standard
I briefly experimented with using a union as a sort of 
\begin_inset Quotes eld
\end_inset

comparable
\begin_inset Quotes erd
\end_inset

 data type which could be passed to and returned from a function pointer,
 but when I began to implement this it seemed like I was going to be writing
 more code than simply having a hard coded version to search for each type.
 I therefore chose to use a specific search function for each type of structure
 stored within a linked list.
 This means that there is some code repetition, but I feel that this is
 justifiable in this simple implementation considering the complexity of
 the alternative solution.
\end_layout

\begin_layout Standard
The first part of the system that I designed and wrote was the fileio file.
 This file contains all of the functions required to read in the data files
 into the C structures used by the program.
 Each structure effectively has its own function to read in the data stored
 in it.
 To make the code for this process more compact and reusable, I have implemented
 a generic file read function that can safely open and close a file and
 that takes a function pointer to one of the specific file reading functions.
 Alongside this I also have a function which prompts the user for the full
 file path for each of the files required by the program.
\end_layout

\begin_layout Standard
The final key file in the system is the Linked_list file.
 This file implements a couple of simple functions that work with any data
 type to add a new element to a linked list and also to traverse the list
 and execute a function on each node in the list.
 These functions were designed so that they could be reused across the program
 and potentially reused in other applications and are hence separated from
 the rest of the application logic.
\end_layout

\begin_layout Subsection
Extended Mission
\end_layout

\begin_layout Standard
Generally, the code for the extended mission is pretty much the same as
 the code for the main mission.
 When I was designing the main mission, I tried to keep it as extensible
 as I could so that adding the code required for the extended mission would
 not require redesigning large blocks of code.
\end_layout

\begin_layout Standard
On the whole the only major changes are that addition of a few more fields
 and enumerated values to some of the structures and case statements to
 select between the more realistic cases presented by the extended mission
 as well as an extra function to print out whether the entrants have been
 excluded and for what offense.
 Additionally, I also found that I need to add code that would account for
 the delay that an entrant incurs at a medical checkpoint and deducts this
 from their final score.
\end_layout

\begin_layout Subsection
Track Estimation
\end_layout

\begin_layout Standard
One additional part of program that was not required in the specification
 is the estimation of what track an entrant is probably on between the last
 checkpoint they visited and the next checkpoint they are expected to reach.
 This is done by using the last checkpoint that the entrant has checked
 in at and then find the next checkpoint that they will reach provided they
 stay on the current course.
 Then by using the time that they last reached a checkpoint and the cumulative
 times of the tracks they should have traversed and comparing this with
 the most recent time, we can predict roughly which track we expect them
 to be on.
 
\end_layout

\begin_layout Standard
Note that if an entrant is running late to the next checkpoint, this is
 flagged and the entrant's predicted position will not be updated to be
 passed the checkpoint they are next expected.
 This flag can then be used to output to the user that the current entrant
 is running late and they they might have become lost at one of the junctions.
\end_layout

\begin_layout Subsection
Further Development
\end_layout

\begin_layout Standard
While I feel that the program I have produced satisfies the requirements
 of the brief provided, I believe that their is still room for improvement
 in this application.
 One area I feel could easily be improved in this application is the amount
 of error checking done.
 I feel that using scanf and fscanf to take input for the user and from
 files could been implemented to provide better error handling e.g.
 handling incorrect types (letters when expecting numbers) or handling file
 parsing errors.
\end_layout

\begin_layout Standard
I also feel that in a more sophisticated implementation rethinking the way
 the system is designed may be necessary.
 I forecast that to handle a realistic version of this problem may require
 the full representation of a graph in memory (using an adjacency list or
 similar) and possibly change the way some data types are stored from a
 linked list to an array for quicker positional access.
 But for the purposes of this assignment, I feel that the supplied solution
 works equally well.
\end_layout

\begin_layout Section
Build Log
\end_layout

\begin_layout Standard
Below I provide the build logs for both the main mission and the extended
 mission.
 These logs were both generated using NetBeans on a Oracle Solaris machine
 in the Solarium.
\end_layout

\begin_layout Subsection
Build Log for the Main Mission
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

"/opt/csw/bin/gmake" -f nbproject/Makefile-Debug.mk 
\end_layout

\begin_layout Plain Layout

QMAKE= SUBPROJECTS= .clean-conf gmake[1]: 
\end_layout

\begin_layout Plain Layout

Entering directory `/ceri/homes1/s/slj11/main' rm -f -r 
\end_layout

\begin_layout Plain Layout

build/Debug rm -f dist/Debug/NewGNU-Solaris-Sparc/main 
\end_layout

\begin_layout Plain Layout

gmake[1]: Leaving directory `/ceri/homes1/s/slj11/main'
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

CLEAN SUCCESSFUL (total time: 472ms)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

"/opt/csw/bin/gmake" -f nbproject/Makefile-Debug.mk QMAKE= 
\end_layout

\begin_layout Plain Layout

SUBPROJECTS= .build-conf gmake[1]: Entering directory 
\end_layout

\begin_layout Plain Layout

`/ceri/homes1/s/slj11/main' "/opt/csw/bin/gmake" 
\end_layout

\begin_layout Plain Layout

-f nbproject/Makefile-Debug.mk dist/Debug/NewGNU-Solaris-Sparc/main 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

gmake[2]: Entering directory `/ceri/homes1/s/slj11/main' mkdir -p 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc rm -f 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/util.o.d 
\end_layout

\begin_layout Plain Layout

gcc -c -g -Wall -I.
 -std=c89 -MMD -MP -MF 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/util.o.d -o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/util.o util.c mkdir -p 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc rm -f 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/fileio.o.d 
\end_layout

\begin_layout Plain Layout

gcc -c -g -Wall -I.
 -std=c89 -MMD -MP -MF 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/fileio.o.d -o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/fileio.o 
\end_layout

\begin_layout Plain Layout

fileio.c mkdir -p 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc rm -f 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/linked_list.o.d 
\end_layout

\begin_layout Plain Layout

gcc -c -g -Wall -I.
 -std=c89 -MMD -MP -MF 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/linked_list.o.d -o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/linked_list.o linked_list.c mkdir -p 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc rm -f 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/main.o.d 
\end_layout

\begin_layout Plain Layout

gcc -c -g -Wall -I.
 -std=c89 -MMD -MP -MF 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/main.o.d -o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/main.o main.c mkdir -p 
\end_layout

\begin_layout Plain Layout

dist/Debug/NewGNU-Solaris-Sparc gcc -o 
\end_layout

\begin_layout Plain Layout

dist/Debug/NewGNU-Solaris-Sparc/main 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/util.o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/fileio.o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/linked_list.o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/main.o 
\end_layout

\begin_layout Plain Layout

gmake[2]: Leaving directory `/ceri/homes1/s/slj11/main' 
\end_layout

\begin_layout Plain Layout

gmake[1]: Leaving directory `/ceri/homes1/s/slj11/main'
\end_layout

\begin_layout Plain Layout

BUILD SUCCESSFUL (total time: 2s)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Build Log for the Extended Mission
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

"/opt/csw/bin/gmake" -f nbproject/Makefile-Debug.mk 
\end_layout

\begin_layout Plain Layout

QMAKE= SUBPROJECTS= .clean-conf 
\end_layout

\begin_layout Plain Layout

gmake[1]: Entering directory `/ceri/homes1/s/slj11/extended' rm -f -r 
\end_layout

\begin_layout Plain Layout

build/Debug rm -f dist/Debug/NewGNU-Solaris-Sparc/extended 
\end_layout

\begin_layout Plain Layout

gmake[1]: Leaving directory `/ceri/homes1/s/slj11/extended'
\end_layout

\begin_layout Plain Layout

CLEAN SUCCESSFUL (total time: 1s)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

"/opt/csw/bin/gmake" -f nbproject/Makefile-Debug.mk 
\end_layout

\begin_layout Plain Layout

QMAKE= SUBPROJECTS= .build-conf 
\end_layout

\begin_layout Plain Layout

gmake[1]: Entering directory `/ceri/homes1/s/slj11/extended' 
\end_layout

\begin_layout Plain Layout

"/opt/csw/bin/gmake"  -f nbproject/Makefile-Debug.mk 
\end_layout

\begin_layout Plain Layout

dist/Debug/NewGNU-Solaris-Sparc/extended 
\end_layout

\begin_layout Plain Layout

gmake[2]: Entering directory `/ceri/homes1/s/slj11/extended' mkdir -p 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc rm -f 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/util.o.d 
\end_layout

\begin_layout Plain Layout

gcc    -c -g -Wall -I.
 -std=c89 -MMD -MP -MF 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/util.o.d -o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/util.o util.c mkdir -p 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc rm -f 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/fileio.o.d 
\end_layout

\begin_layout Plain Layout

gcc    -c -g -Wall -I.
 -std=c89 -MMD -MP -MF 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/fileio.o.d -o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/fileio.o fileio.c mkdir -p 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc rm -f 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/linked_list.o.d 
\end_layout

\begin_layout Plain Layout

gcc    -c -g -Wall -I.
 -std=c89 -MMD -MP -MF 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/linked_list.o.d -o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/linked_list.o linked_list.c mkdir -p 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc rm -f 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/main.o.d 
\end_layout

\begin_layout Plain Layout

gcc    -c -g -Wall -I.
 -std=c89 -MMD -MP -MF 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/main.o.d -o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/main.o main.c mkdir -p 
\end_layout

\begin_layout Plain Layout

dist/Debug/NewGNU-Solaris-Sparc 
\end_layout

\begin_layout Plain Layout

gcc     -o 
\end_layout

\begin_layout Plain Layout

dist/Debug/NewGNU-Solaris-Sparc/extended 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/util.o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/fileio.o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/linked_list.o 
\end_layout

\begin_layout Plain Layout

build/Debug/NewGNU-Solaris-Sparc/main.o 
\end_layout

\begin_layout Plain Layout

gmake[2]: Leaving directory `/ceri/homes1/s/slj11/extended' 
\end_layout

\begin_layout Plain Layout

gmake[1]: Leaving directory `/ceri/homes1/s/slj11/extended'
\end_layout

\begin_layout Plain Layout

BUILD SUCCESSFUL (total time: 2s)
\end_layout

\end_inset


\end_layout

\begin_layout Section
Log of Program Execution
\end_layout

\begin_layout Standard
This section provides a log of the output generated when running the program
 for each of the major functions the the user can do with the system.
 This log of program execution uses the extended mission version of the
 application as it is almost identical to the main mission, and therefore
 demonstrates all parts of the required functionality.
 This log of program execution uses the data files provided in event 3.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

|==============================================|
\end_layout

\begin_layout Plain Layout

|--------------RUNNERS AND RIDERS--------------|
\end_layout

\begin_layout Plain Layout

|----------------------------------------------|
\end_layout

\begin_layout Plain Layout

|----------Event tracking application----------|
\end_layout

\begin_layout Plain Layout

|==============================================|
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Loading data files...
\end_layout

\begin_layout Plain Layout

Enter location and name of event details file:
\end_layout

\begin_layout Plain Layout

event_3/name.txt
\end_layout

\begin_layout Plain Layout

Enter location and name of the nodes file:
\end_layout

\begin_layout Plain Layout

event_3/nodes.txt
\end_layout

\begin_layout Plain Layout

Enter location and name of the tracks file:
\end_layout

\begin_layout Plain Layout

event_3/tracks.txt
\end_layout

\begin_layout Plain Layout

Enter location and name of the courses file:
\end_layout

\begin_layout Plain Layout

event_3/courses.txt
\end_layout

\begin_layout Plain Layout

Enter location and name of the entrants file:
\end_layout

\begin_layout Plain Layout

event_3/entrants.txt
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
Loading the data files on application startup.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

7
\end_layout

\begin_layout Plain Layout

Enter name of the checkpoint files:
\end_layout

\begin_layout Plain Layout

event_3/cp_times_1.txt
\end_layout

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

7
\end_layout

\begin_layout Plain Layout

Enter name of the checkpoint files:
\end_layout

\begin_layout Plain Layout

event_3/cp_times_2.txt
\end_layout

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

7
\end_layout

\begin_layout Plain Layout

Enter name of the checkpoint files:
\end_layout

\begin_layout Plain Layout

event_3/cp_times_3.txt
\end_layout

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

7
\end_layout

\begin_layout Plain Layout

Enter name of the checkpoint files:
\end_layout

\begin_layout Plain Layout

event_3/cp_times_4.txt
\end_layout

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

7
\end_layout

\begin_layout Plain Layout

Enter name of the checkpoint files:
\end_layout

\begin_layout Plain Layout

event_3/cp_times_5.txt
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
Loading the checkpoint time data files into the system.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

8
\end_layout

\begin_layout Plain Layout

--------------------------------------------------------------------------------
---------------------------------
\end_layout

\begin_layout Plain Layout

|Competitor           |  Course  |     Status     |  Start Time |   End
 Time  |    MC Delay    |     Total      |
\end_layout

\begin_layout Plain Layout

|-------------------------------------------------------------------------------
--------------------------------|
\end_layout

\begin_layout Plain Layout

|Ace Abbey            |    E     |COMPLETED       |    07:30    |    09:34
    |  00hrs 00mins  |  02hrs 04mins  |
\end_layout

\begin_layout Plain Layout

|Ace Fudge            |    A     |COMPLETED       |    07:33    |    11:31
    |  00hrs 06mins  |  03hrs 52mins  |
\end_layout

\begin_layout Plain Layout

|Amber Abbey          |    C     |COMPLETED       |    07:37    |    10:14
    |  00hrs 00mins  |  02hrs 37mins  |
\end_layout

\begin_layout Plain Layout

|Amber Fudge          |    E     |COMPLETED       |    07:40    |    09:51
    |  00hrs 00mins  |  02hrs 11mins  |
\end_layout

\begin_layout Plain Layout

|April Abbey          |    D     |COMPLETED       |    07:43    |    09:46
    |  00hrs 00mins  |  02hrs 03mins  |
\end_layout

\begin_layout Plain Layout

|April Fudge          |    B     |COMPLETED       |    07:46    |    10:36
    |  00hrs 04mins  |  02hrs 46mins  |
\end_layout

\begin_layout Plain Layout

|Ash Abbey            |    F     |COMPLETED       |    07:49    |    09:45
    |  00hrs 00mins  |  01hrs 56mins  |
\end_layout

\begin_layout Plain Layout

|Ash Fudge            |    D     |COMPLETED       |    07:52    |    09:50
    |  00hrs 00mins  |  01hrs 58mins  |
\end_layout

\begin_layout Plain Layout

|Asti Abbey           |    A     |COMPLETED       |    07:55    |    11:50
    |  00hrs 06mins  |  03hrs 49mins  |
\end_layout

\begin_layout Plain Layout

|Asti Fudge           |    A     |COMPLETED       |    07:58    |    11:55
    |  00hrs 06mins  |  03hrs 51mins  |
\end_layout

\begin_layout Plain Layout

|Autumn Abbey         |    C     |COMPLETED       |    08:01    |    10:31
    |  00hrs 00mins  |  02hrs 30mins  |
\end_layout

\begin_layout Plain Layout

|Autumn Fudge         |    B     |COMPLETED       |    08:04    |    11:00
    |  00hrs 03mins  |  02hrs 53mins  |
\end_layout

\begin_layout Plain Layout

|Barfields Marco Abbey|    A     |COMPLETED       |    08:07    |    12:01
    |  00hrs 05mins  |  03hrs 49mins  |
\end_layout

\begin_layout Plain Layout

|Barfields Marco Fudge|    F     |COMPLETED       |    08:10    |    10:05
    |  00hrs 00mins  |  01hrs 55mins  |
\end_layout

\begin_layout Plain Layout

|Basil Abbey          |    B     |COMPLETED       |    08:13    |    11:05
    |  00hrs 03mins  |  02hrs 49mins  |
\end_layout

\begin_layout Plain Layout

|Basil Fudge          |    A     |COMPLETED       |    08:16    |    12:11
    |  00hrs 05mins  |  03hrs 50mins  |
\end_layout

\begin_layout Plain Layout

|Beatrice Abbey       |    C     |COMPLETED       |    08:20    |    10:47
    |  00hrs 00mins  |  02hrs 27mins  |
\end_layout

\begin_layout Plain Layout

|Beatrice Fudge       |    A     |COMPLETED       |    08:23    |    12:19
    |  00hrs 06mins  |  03hrs 50mins  |
\end_layout

\begin_layout Plain Layout

|Beau Abbey           |    D     |COMPLETED       |    08:26    |    10:28
    |  00hrs 00mins  |  02hrs 02mins  |
\end_layout

\begin_layout Plain Layout

|Beau Fudge           |    C     |EXCLUDED IR     |    08:29    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Bella Abbey          |    B     |COMPLETED       |    08:32    |    11:28
    |  00hrs 02mins  |  02hrs 54mins  |
\end_layout

\begin_layout Plain Layout

|Bella Fudge          |    F     |COMPLETED       |    08:35    |    10:24
    |  00hrs 00mins  |  01hrs 49mins  |
\end_layout

\begin_layout Plain Layout

|Black Jack Abbey     |    F     |COMPLETED       |    08:38    |    10:27
    |  00hrs 00mins  |  01hrs 49mins  |
\end_layout

\begin_layout Plain Layout

|Black Jack Fudge     |    A     |EXCLUDED IR     |    08:41    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Blue Abbey           |    B     |COMPLETED       |    08:45    |    11:32
    |  00hrs 04mins  |  02hrs 43mins  |
\end_layout

\begin_layout Plain Layout

|Blue Fudge           |    B     |COMPLETED       |    08:48    |    11:35
    |  00hrs 03mins  |  02hrs 44mins  |
\end_layout

\begin_layout Plain Layout

|Bobby Abbey          |    A     |COMPLETED       |    08:51    |    12:49
    |  00hrs 06mins  |  03hrs 52mins  |
\end_layout

\begin_layout Plain Layout

|Bobby Fudge          |    E     |COMPLETED       |    08:54    |    10:57
    |  00hrs 00mins  |  02hrs 03mins  |
\end_layout

\begin_layout Plain Layout

|Bubbles Abbey        |    C     |COMPLETED       |    08:57    |    11:29
    |  00hrs 00mins  |  02hrs 32mins  |
\end_layout

\begin_layout Plain Layout

|Bubbles Fudge        |    D     |EXCLUDED IR     |    09:00    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Captain Abbey        |    A     |COMPLETED       |    09:03    |    13:02
    |  00hrs 07mins  |  03hrs 52mins  |
\end_layout

\begin_layout Plain Layout

|Captain Fudge        |    B     |COMPLETED       |    09:06    |    11:59
    |  00hrs 02mins  |  02hrs 51mins  |
\end_layout

\begin_layout Plain Layout

|Chalkie Abbey        |    D     |COMPLETED       |    09:09    |    11:12
    |  00hrs 00mins  |  02hrs 03mins  |
\end_layout

\begin_layout Plain Layout

|Chalkie Fudge        |    F     |EXCLUDED IR     |    09:12    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Copper Abbey         |    E     |COMPLETED       |    09:15    |    11:20
    |  00hrs 00mins  |  02hrs 05mins  |
\end_layout

\begin_layout Plain Layout

|Copper Fudge         |    B     |EXCLUDED IR     |    09:18    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Diamond Abbey        |    C     |COMPLETED       |    09:21    |    11:50
    |  00hrs 00mins  |  02hrs 29mins  |
\end_layout

\begin_layout Plain Layout

|Diamond Fudge        |    B     |EXCLUDED IR     |    09:25    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Dinky Abbey          |    E     |COMPLETED       |    09:28    |    11:38
    |  00hrs 00mins  |  02hrs 10mins  |
\end_layout

\begin_layout Plain Layout

|Dinky Fudge          |    F     |COMPLETED       |    09:31    |    11:25
    |  00hrs 00mins  |  01hrs 54mins  |
\end_layout

\begin_layout Plain Layout

|Ebony Abbey          |    B     |COMPLETED       |    09:34    |    12:41
    |  00hrs 03mins  |  03hrs 04mins  |
\end_layout

\begin_layout Plain Layout

|Ebony Fudge          |    C     |COMPLETED       |    09:37    |    12:12
    |  00hrs 00mins  |  02hrs 35mins  |
\end_layout

\begin_layout Plain Layout

|Ginger Abbey         |    C     |COMPLETED       |    09:40    |    12:12
    |  00hrs 00mins  |  02hrs 32mins  |
\end_layout

\begin_layout Plain Layout

|Ginger Fudge         |    F     |COMPLETED       |    09:43    |    11:41
    |  00hrs 00mins  |  01hrs 58mins  |
\end_layout

\begin_layout Plain Layout

|Goldie Abbey         |    A     |EXCLUDED IR     |    09:46    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Goldie Fudge         |    E     |COMPLETED       |    09:49    |    12:01
    |  00hrs 00mins  |  02hrs 12mins  |
\end_layout

\begin_layout Plain Layout

|Honey Abbey          |    F     |COMPLETED       |    09:52    |    11:46
    |  00hrs 00mins  |  01hrs 54mins  |
\end_layout

\begin_layout Plain Layout

|Honey Fudge          |    C     |COMPLETED       |    09:56    |    12:32
    |  00hrs 00mins  |  02hrs 36mins  |
\end_layout

\begin_layout Plain Layout

|Izzy Abbey           |    A     |COMPLETED       |    10:00    |    13:59
    |  00hrs 06mins  |  03hrs 53mins  |
\end_layout

\begin_layout Plain Layout

|Izzy Fudge           |    A     |EXCLUDED IR     |    10:03    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Jasmine Abbey        |    A     |COMPLETED       |    10:06    |    14:03
    |  00hrs 07mins  |  03hrs 50mins  |
\end_layout

\begin_layout Plain Layout

|Jasmine Fudge        |    F     |COMPLETED       |    10:09    |    12:04
    |  00hrs 00mins  |  01hrs 55mins  |
\end_layout

\begin_layout Plain Layout

|Lady Abbey           |    D     |EXCLUDED IR     |    10:12    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Lady Fudge           |    B     |COMPLETED       |    10:16    |    13:17
    |  00hrs 02mins  |  02hrs 59mins  |
\end_layout

\begin_layout Plain Layout

|Lady Tara Abbey      |    C     |COMPLETED       |    10:19    |    12:48
    |  00hrs 00mins  |  02hrs 29mins  |
\end_layout

\begin_layout Plain Layout

|Lady Tara Fudge      |    B     |COMPLETED       |    10:23    |    13:16
    |  00hrs 03mins  |  02hrs 50mins  |
\end_layout

\begin_layout Plain Layout

|Lemon Abbey          |    B     |COMPLETED       |    10:26    |    13:32
    |  00hrs 04mins  |  03hrs 02mins  |
\end_layout

\begin_layout Plain Layout

|Lemon Fudge          |    E     |EXCLUDED IR     |    10:29    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Lord Abbey           |    F     |COMPLETED       |    10:32    |    12:26
    |  00hrs 00mins  |  01hrs 54mins  |
\end_layout

\begin_layout Plain Layout

|Lord Fudge           |    E     |COMPLETED       |    10:35    |    12:49
    |  00hrs 00mins  |  02hrs 14mins  |
\end_layout

\begin_layout Plain Layout

|Lucky Abbey          |    A     |EXCLUDED IR     |    10:39    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Lucky Fudge          |    E     |COMPLETED       |    10:42    |    12:54
    |  00hrs 00mins  |  02hrs 12mins  |
\end_layout

\begin_layout Plain Layout

|Lord Abbey           |    D     |COMPLETED       |    10:45    |    12:48
    |  00hrs 00mins  |  02hrs 03mins  |
\end_layout

\begin_layout Plain Layout

|Lord Fudge           |    B     |COMPLETED       |    10:49    |    13:48
    |  00hrs 03mins  |  02hrs 56mins  |
\end_layout

\begin_layout Plain Layout

|Maddy Abbey          |    F     |EXCLUDED IR     |    10:53    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Maddy Fudge          |    A     |COMPLETED       |    10:56    |    14:57
    |  00hrs 07mins  |  03hrs 54mins  |
\end_layout

\begin_layout Plain Layout

|Magic Abbey          |    D     |COMPLETED       |    11:00    |    13:04
    |  00hrs 00mins  |  02hrs 04mins  |
\end_layout

\begin_layout Plain Layout

|Magic Fudge          |    D     |COMPLETED       |    11:04    |    13:06
    |  00hrs 00mins  |  02hrs 02mins  |
\end_layout

\begin_layout Plain Layout

|Major Abbey          |    A     |COMPLETED       |    11:07    |    14:55
    |  00hrs 05mins  |  03hrs 43mins  |
\end_layout

\begin_layout Plain Layout

|Major Fudge          |    A     |EXCLUDED IR     |    11:11    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Mattie Abbey         |    B     |COMPLETED       |    11:14    |    14:09
    |  00hrs 03mins  |  02hrs 52mins  |
\end_layout

\begin_layout Plain Layout

|Mattie Fudge         |    A     |COMPLETED       |    11:17    |    15:15
    |  00hrs 06mins  |  03hrs 52mins  |
\end_layout

\begin_layout Plain Layout

|Prince Abbey         |    B     |COMPLETED       |    11:21    |    14:24
    |  00hrs 04mins  |  02hrs 59mins  |
\end_layout

\begin_layout Plain Layout

|Prince Fudge         |    A     |COMPLETED       |    11:24    |    15:30
    |  00hrs 06mins  |  04hrs 00mins  |
\end_layout

\begin_layout Plain Layout

|Princess Abbey       |    B     |COMPLETED       |    11:28    |    14:31
    |  00hrs 02mins  |  03hrs 01mins  |
\end_layout

\begin_layout Plain Layout

|Princess Fudge       |    B     |COMPLETED       |    11:31    |    14:36
    |  00hrs 03mins  |  03hrs 02mins  |
\end_layout

\begin_layout Plain Layout

|Rosie Abbey          |    D     |COMPLETED       |    11:34    |    13:33
    |  00hrs 00mins  |  01hrs 59mins  |
\end_layout

\begin_layout Plain Layout

|Rosie Fudge          |    B     |COMPLETED       |    11:37    |    14:24
    |  00hrs 02mins  |  02hrs 45mins  |
\end_layout

\begin_layout Plain Layout

|Ruby Abbey           |    F     |COMPLETED       |    11:40    |    13:39
    |  00hrs 00mins  |  01hrs 59mins  |
\end_layout

\begin_layout Plain Layout

|Ruby Fudge           |    C     |COMPLETED       |    11:43    |    14:19
    |  00hrs 00mins  |  02hrs 36mins  |
\end_layout

\begin_layout Plain Layout

|Sapphire Abbey       |    C     |COMPLETED       |    11:46    |    14:16
    |  00hrs 00mins  |  02hrs 30mins  |
\end_layout

\begin_layout Plain Layout

|Sapphire Fudge       |    F     |COMPLETED       |    11:49    |    13:46
    |  00hrs 00mins  |  01hrs 57mins  |
\end_layout

\begin_layout Plain Layout

|Scarlet Abbey        |    C     |COMPLETED       |    11:52    |    14:27
    |  00hrs 00mins  |  02hrs 35mins  |
\end_layout

\begin_layout Plain Layout

|Scarlet Fudge        |    F     |COMPLETED       |    11:55    |    13:51
    |  00hrs 00mins  |  01hrs 56mins  |
\end_layout

\begin_layout Plain Layout

|sienna Abbey         |    D     |COMPLETED       |    11:59    |    14:01
    |  00hrs 00mins  |  02hrs 02mins  |
\end_layout

\begin_layout Plain Layout

|sienna Fudge         |    B     |EXCLUDED IR     |    12:02    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Silver Abbey         |    F     |COMPLETED       |    12:05    |    14:01
    |  00hrs 00mins  |  01hrs 56mins  |
\end_layout

\begin_layout Plain Layout

|Silver Fudge         |    A     |COMPLETED       |    12:08    |    15:55
    |  00hrs 04mins  |  03hrs 43mins  |
\end_layout

\begin_layout Plain Layout

|Smokey Abbey         |    A     |COMPLETED       |    12:11    |    16:12
    |  00hrs 06mins  |  03hrs 55mins  |
\end_layout

\begin_layout Plain Layout

|Smokey Fudge         |    D     |COMPLETED       |    12:14    |    14:17
    |  00hrs 00mins  |  02hrs 03mins  |
\end_layout

\begin_layout Plain Layout

|Snowy Abbey          |    E     |EXCLUDED IR     |    12:17    |     N/a
     |       N/a      |       N/a      |
\end_layout

\begin_layout Plain Layout

|Snowy Fudge          |    C     |COMPLETED       |    12:20    |    14:48
    |  00hrs 00mins  |  02hrs 28mins  |
\end_layout

\begin_layout Plain Layout

|sonic Abbey          |    A     |COMPLETED       |    12:23    |    16:14
    |  00hrs 04mins  |  03hrs 47mins  |
\end_layout

\begin_layout Plain Layout

|sonic Fudge          |    D     |COMPLETED       |    12:26    |    14:29
    |  00hrs 00mins  |  02hrs 03mins  |
\end_layout

\begin_layout Plain Layout

|Summer Abbey         |    A     |COMPLETED       |    12:30    |    16:34
    |  00hrs 06mins  |  03hrs 58mins  |
\end_layout

\begin_layout Plain Layout

|Summer Fudge         |    E     |COMPLETED       |    12:33    |    14:43
    |  00hrs 00mins  |  02hrs 10mins  |
\end_layout

\begin_layout Plain Layout

|Tango Abbey          |    B     |COMPLETED       |    12:36    |    15:35
    |  00hrs 02mins  |  02hrs 57mins  |
\end_layout

\begin_layout Plain Layout

|Tango Fudge          |    A     |COMPLETED       |    12:39    |    16:48
    |  00hrs 07mins  |  04hrs 02mins  |
\end_layout

\begin_layout Plain Layout

|Topaz Abbey          |    B     |COMPLETED       |    12:42    |    15:38
    |  00hrs 02mins  |  02hrs 54mins  |
\end_layout

\begin_layout Plain Layout

|Topaz Fudge          |    F     |COMPLETED       |    12:45    |    14:38
    |  00hrs 00mins  |  01hrs 53mins  |
\end_layout

\begin_layout Plain Layout

|Zizou Abbey          |    D     |COMPLETED       |    12:49    |    14:52
    |  00hrs 00mins  |  02hrs 03mins  |
\end_layout

\begin_layout Plain Layout

|Zizou Fudge          |    F     |COMPLETED       |    12:52    |    14:47
    |  00hrs 00mins  |  01hrs 55mins  |
\end_layout

\begin_layout Plain Layout

--------------------------------------------------------------------------------
---------------------------------
\end_layout

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
Outputting the table of results after loading the check point times for
 event 3.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Endurance Horse Race - The Main Event
\end_layout

\begin_layout Plain Layout

27th June 2012
\end_layout

\begin_layout Plain Layout

Start Time: 07:30
\end_layout

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
Printing the event details
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Enter id for the competitor:
\end_layout

\begin_layout Plain Layout

4
\end_layout

\begin_layout Plain Layout

COMPETITOR 4:
\end_layout

\begin_layout Plain Layout

Name: Amber Abbey
\end_layout

\begin_layout Plain Layout

Status: Out on track.
\end_layout

\begin_layout Plain Layout

Last recorded time: 09:26
\end_layout

\begin_layout Plain Layout

Last checkpoint visited: 13
\end_layout

\begin_layout Plain Layout

Track Reference No.: 13
\end_layout

\begin_layout Plain Layout

Presumed on track between node 2 and node 13
\end_layout

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
Querying competitor #4
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Enter the type of check point (T|I|A|D|E):
\end_layout

\begin_layout Plain Layout

T
\end_layout

\begin_layout Plain Layout

Enter the competitor number:
\end_layout

\begin_layout Plain Layout

4
\end_layout

\begin_layout Plain Layout

Enter the check point number:
\end_layout

\begin_layout Plain Layout

1
\end_layout

\begin_layout Plain Layout

Enter the time recorded:
\end_layout

\begin_layout Plain Layout

10:00
\end_layout

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
Updating a competitor manually.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

3
\end_layout

\begin_layout Plain Layout

64 competitors have not yet started
\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
Querying how many competitors have not yet started.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Competitors Excluded from Regular Checkpoints
\end_layout

\begin_layout Plain Layout

------------------------------------------
\end_layout

\begin_layout Plain Layout

|Competitor           |  Node  |  Time   |
\end_layout

\begin_layout Plain Layout

|----------------------------------------|
\end_layout

\begin_layout Plain Layout

|Beau Fudge           |   09   |  09:49  |
\end_layout

\begin_layout Plain Layout

|Bubbles Fudge        |   17   |  09:57  |
\end_layout

\begin_layout Plain Layout

------------------------------------------
\end_layout

\begin_layout Plain Layout

Enter an Option:
\end_layout

\begin_layout Plain Layout

0  - Exit
\end_layout

\begin_layout Plain Layout

1  - Event Details
\end_layout

\begin_layout Plain Layout

2  - Query Competitor
\end_layout

\begin_layout Plain Layout

3  - Check how many competitors not yet started
\end_layout

\begin_layout Plain Layout

4  - Check how many competitors are out on courses
\end_layout

\begin_layout Plain Layout

5  - Check how many competitors have finished
\end_layout

\begin_layout Plain Layout

6  - Manually update a competitor
\end_layout

\begin_layout Plain Layout

7  - Read in a file of updates
\end_layout

\begin_layout Plain Layout

8  - Print table of results
\end_layout

\begin_layout Plain Layout

9  - Print entrants excluded at medical checkpoints
\end_layout

\begin_layout Plain Layout

10 - Print entrants excluded at regular checkpoints
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout
Printing how many competitors are excluded for taking the wrong route after
 loading some of the checkpoint time files.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Code Appendix
\end_layout

\begin_layout Standard
The final part of this document provides a full printout of the code that
 I have written to solve this assignment.
 This printout is ordered with the main mission first, followed by the code
 for the extended mission.
\end_layout

\end_body
\end_document
